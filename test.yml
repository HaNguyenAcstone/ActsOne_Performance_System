apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-proxy
spec:
  replicas: 3
  selector:
    matchLabels:
      app: envoy-proxy
  template:
    metadata:
      labels:
        app: envoy-proxy
    spec:
      containers:
      - name: envoy
        image: envoyproxy/envoy:v1.20.1
        ports:
        - containerPort: 8080
        - containerPort: 9901  # Envoy admin port
        volumeMounts:
        - name: envoy-config
          mountPath: /etc/envoy
        command:
        - /usr/local/bin/envoy
        - -c
        - /etc/envoy/envoy.yaml
      - name: api-producer-kafka-basic
        image: linhtran2023/deploy_kafka_producer:v08
        ports:
        - containerPort: 80
      volumes:
      - name: envoy-config
        configMap:
          name: envoy-config

---

apiVersion: v1
kind: Service
metadata:
  name: envoy-proxy
spec:
  selector:
    app: envoy-proxy
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080


---

apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
data:
  envoy.yaml: |
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 8080
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: web_cluster
                      timeout: 0s
              http_filters:
              - name: envoy.filters.http.router
      clusters:
      - name: web_cluster
        connect_timeout: 0.25s
        type: strict_dns
        lb_policy: round_robin
        http2_protocol_options: {}
        load_assignment:
          cluster_name: web_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: api-producer-kafka-basic
                    port_value: 30000
